{"version":3,"sources":["components/tweets/style.module.css","components/navbar/style.module.css","components/users/style.module.css","api/api.js","redux/actions.js","redux/reducer.js","redux/store.js","components/navbar/NavBar.js","components/addTweet/index.js","components/addUser/index.js","components/tweets/index.js","components/users/index.js","components/router/index.js","App.js","index.js","components/addUser/style.module.css","components/addTweet/style.module.css"],"names":["module","exports","axiosConfig","baseURL","headers","usersAPI","axios","form","JSON","stringify","tweetsAPI","SET_USERS","SET_TWEETS","requestUsers","dispatch","a","response","users","data","type","payload","console","log","initialState","tweets","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","state","action","applyMiddleware","thunkMiddleware","NavBar","className","style","to","AddTweet","useDispatch","useSelector","useState","content","setContent","image","setImage","contentDirty","setContentDirty","imageDirty","setImageDirty","errorContentMessage","setErrorContentMessage","errorImageMessage","setErrorImageMessage","fieldBorderColor","setFieldBorderColor","formValid","setFormValid","useEffect","validShema","handleBlur","event","target","name","onSubmit","preventDefault","FormData","formObject","Object","fromEntries","entries","userId","Number","user","success","alert","length","map","value","id","borderColor","placeholder","onChange","e","regex","RegExp","test","contentHandler","onBlur","imageHandler","disabled","AddUser","setName","username","setUsername","avatar","setAvatar","nameDirty","setNameDirty","usernameDirty","setUsernameDirty","avatarDirty","setAvatarDirty","errorNameMessage","setErrorNameMessage","errorUsernameMessage","setErrorUsernameMessage","errorAvatarMessage","setErrorAvatarMessage","nameHandler","usernameHandler","avatarHandler","Tweets","getUser","userID","find","tweet","src","alt","backgroundImage","reverse","Users","Router","navigate","useNavigate","location","useLocation","pathname","path","element","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9afc340.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"style_page__2C9ZK\",\"card\":\"style_card__2r09y\",\"avatar\":\"style_avatar__1VrBe\",\"head\":\"style_head__33qAU\",\"headInfo\":\"style_headInfo__mBNHi\",\"headInfoNames\":\"style_headInfoNames__2j_Yw\",\"headInfoNamesItem\":\"style_headInfoNamesItem__3Hy1V\",\"mainImg\":\"style_mainImg__3JCkS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"style_navbar__1lIwS\",\"menuItem\":\"style_menuItem__3Ayh_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"style_page__zCvRh\",\"card\":\"style_card__CJyQX\",\"avatar\":\"style_avatar__2YkYn\",\"menuItem\":\"style_menuItem__1R4km\"};","import * as axios from \"axios\";\r\n\r\n//===================================== configs\r\n\r\nlet axiosConfig = {\r\n  baseURL: \"http://domer.tech:9999/\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\n// ======================== Users ========================\r\n\r\nexport const usersAPI = {\r\n  getUsers() {\r\n    return axios.get(`/users/`, axiosConfig);\r\n  },\r\n\r\n  addUser(form) {\r\n    return axios.post(`/users/`, JSON.stringify(form), axiosConfig);\r\n  },\r\n};\r\n\r\n// ======================== Tweets ========================\r\n\r\nexport const tweetsAPI = {\r\n  getTweets() {\r\n    return axios.get(`/tweets/`, axiosConfig);\r\n  },\r\n\r\n  addTweet(form) {\r\n    return axios.post(`/tweets/`, JSON.stringify(form), axiosConfig);\r\n  },\r\n};\r\n","import { tweetsAPI, usersAPI } from \"../api/api\";\n\nexport const SET_USERS = \"SET_USERS\";\nexport const SET_TWEETS = \"SET_TWEETS\";\n\nexport const setUsers = (users) => ({\n  type: SET_USERS,\n  payload: users,\n});\n\nexport const requestUsers = () => async (dispatch) => {\n  try {\n    let response = await usersAPI.getUsers();\n    dispatch(setUsers(response.data));\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const createUser = (form) => {\n  return async (dispatch) => {\n    try {\n      const response = await usersAPI.addUser(form);\n      if (response.data.success) {\n        alert(\"Пользователь добавлен\");\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};\n\n// ======================================\n\nexport const setTweets = (tweets) => ({\n  type: SET_TWEETS,\n  payload: tweets,\n});\n\nexport const requestTweets = () => async (dispatch) => {\n  try {\n    let response = await tweetsAPI.getTweets();\n    dispatch(setTweets(response.data));\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const createTweet = (form) => {\n  return async (dispatch) => {\n    try {\n      const response = await tweetsAPI.addTweet(form);\n      if (response.data.success) {\n        alert(\"Твит добавлен\");\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};\n","import { SET_TWEETS, SET_USERS } from \"./actions\";\n\nconst initialState = {\n  users: [],\n  tweets: [],\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USERS:\n      return { ...state, users: action.payload.data };\n\n    case SET_TWEETS:\n      return { ...state, tweets: action.payload.data };\n\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { reducer } from \"./reducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(thunkMiddleware))\n);\n\nexport default store;\n","import { Link } from \"react-router-dom\";\nimport * as style from \"./style.module.css\";\n\nexport default function NavBar() {\n  return (\n    <div className={style.navbar}>\n      <Link className={style.menuItem} to=\"/\">\n        Пользователи\n      </Link>\n      <Link className={style.menuItem} to=\"/addUser\">\n        Добавить пользователя\n      </Link>\n      <Link className={style.menuItem} to=\"/tweets\">\n        Твиты\n      </Link>\n      <Link className={style.menuItem} to=\"/addTweet\">\n        Добавить Твит\n      </Link>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createTweet, requestUsers } from \"../../redux/actions\";\nimport * as style from \"./style.module.css\";\n\nexport default function AddTweet() {\n  const dispatch = useDispatch();\n  const users = useSelector((state) => state.users);\n  const [content, setContent] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [contentDirty, setContentDirty] = useState(false);\n  const [imageDirty, setImageDirty] = useState(false);\n  const [errorContentMessage, setErrorContentMessage] = useState(\n    \"Поле не может быть пустым\"\n  );\n  const [errorImageMessage, setErrorImageMessage] = useState(\n    \"Поле не может быть пустым\"\n  );\n  const [fieldBorderColor, setFieldBorderColor] = useState(null);\n  const [formValid, setFormValid] = useState(false);\n\n  useEffect(() => {\n    if (errorContentMessage || errorImageMessage) {\n      setFormValid(false);\n    } else {\n      setFormValid(true);\n    }\n  }, [errorContentMessage, errorImageMessage]);\n\n  const validShema = {\n    content: \"(?:[A-zА-я][- ]?){3}\",\n    image: `(http)s?:?(\\/\\/[^\"']*\\.(?:png|jpg|jpeg|gif|png|svg))`, //eslint-disable-line\n  };\n\n  const contentHandler = (event) => {\n    var regex = new RegExp(validShema[event.target.name]);\n    setContent(event.target.value);\n    if (!regex.test(event.target.value)) {\n      setErrorContentMessage(\"Минимум 3 символа\");\n      setFieldBorderColor({ content: \"red\" });\n    } else {\n      setErrorContentMessage(\"\");\n      setFieldBorderColor({ content: \"green\" });\n    }\n  };\n\n  const imageHandler = (event) => {\n    var regex = new RegExp(validShema[event.target.name]);\n    setImage(event.target.value);\n    if (!regex.test(event.target.value)) {\n      setErrorImageMessage(\"Не корректный URL\");\n      setFieldBorderColor({ image: \"red\" });\n    } else {\n      setErrorImageMessage(\"\");\n      setFieldBorderColor({ image: \"green\" });\n    }\n  };\n\n  useEffect(() => {\n    dispatch(requestUsers());\n  }, [dispatch]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let data = new FormData(event.target);\n    let formObject = Object.fromEntries(data.entries());\n    dispatch(\n      createTweet({\n        userId: Number(formObject.user),\n        content: formObject.content,\n        image: formObject.image,\n      })\n    );\n    setContent(\"\");\n    setImage(\"\");\n  };\n\n  const handleBlur = (event) => {\n    // eslint-disable-next-line default-case\n    switch (event.target.name) {\n      case \"content\": {\n        setContentDirty(true);\n        break;\n      }\n      case \"image\": {\n        setImageDirty(true);\n        break;\n      }\n    }\n  };\n\n  return (\n    <div className={style.page}>\n      <form className={style.pageForm} onSubmit={handleSubmit}>\n        <h3 className={style.pageFormTitle}>Add Tweet</h3>\n        <select name=\"user\" className={style.pageFormField}>\n          {users.length &&\n            users.map((user) => {\n              return (\n                <option key={user.id} value={user.id}>\n                  {user.name}\n                </option>\n              );\n            })}\n        </select>\n        {contentDirty && errorContentMessage && (\n          <p className={style.error}>{errorContentMessage}</p>\n        )}\n        <input\n          className={style.pageFormField}\n          style={{ borderColor: fieldBorderColor && fieldBorderColor.content }}\n          type=\"text\"\n          placeholder=\"Message\"\n          name=\"content\"\n          onChange={(e) => contentHandler(e)}\n          onBlur={(e) => handleBlur(e)}\n          value={content}\n        />\n        {imageDirty && errorImageMessage && (\n          <p className={style.error}>{errorImageMessage}</p>\n        )}\n        <input\n          className={style.pageFormField}\n          style={{ borderColor: fieldBorderColor && fieldBorderColor.image }}\n          type=\"text\"\n          placeholder=\"Image URL...\"\n          name=\"image\"\n          onChange={(e) => imageHandler(e)}\n          onBlur={(e) => handleBlur(e)}\n          value={image}\n        />\n        <input\n          className={style.pageFormField}\n          type=\"submit\"\n          value=\"Добавить\"\n          disabled={!formValid}\n        />\n      </form>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createUser } from \"../../redux/actions\";\nimport * as style from \"./style.module.css\";\n\nexport default function AddUser() {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [avatar, setAvatar] = useState(\"\");\n  const [nameDirty, setNameDirty] = useState(false);\n  const [usernameDirty, setUsernameDirty] = useState(false);\n  const [avatarDirty, setAvatarDirty] = useState(false);\n  const [errorNameMessage, setErrorNameMessage] = useState(\n    \"Поле не может быть пустым\"\n  );\n  const [errorUsernameMessage, setErrorUsernameMessage] = useState(\n    \"Поле не может быть пустым\"\n  );\n  const [errorAvatarMessage, setErrorAvatarMessage] = useState(\n    \"Поле не может быть пустым\"\n  );\n  const [formValid, setFormValid] = useState(false);\n  const [fieldBorderColor, setFieldBorderColor] = useState(null);\n\n  useEffect(() => {\n    if (errorNameMessage || errorUsernameMessage || errorAvatarMessage) {\n      setFormValid(false);\n    } else {\n      setFormValid(true);\n    }\n  }, [errorNameMessage, errorUsernameMessage, errorAvatarMessage]);\n\n  const validShema = {\n    name: \"(?:[A-zА-я][- ]?){3}\",\n    username: \"(?:[A-zА-я][- ]?){5}\",\n    avatar: `(http)s?:?(\\/\\/[^\"']*\\.(?:png|jpg|jpeg|gif|png|svg))`, //eslint-disable-line\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let data = new FormData(event.target);\n    let formObject = Object.fromEntries(data.entries());\n    dispatch(createUser(formObject));\n    setName(\"\");\n    setUsername(\"\");\n    setAvatar(\"\");\n  };\n\n  const nameHandler = (event) => {\n    var regex = new RegExp(validShema[event.target.name]);\n    setName(event.target.value);\n    if (!regex.test(event.target.value)) {\n      setErrorNameMessage(\"Минимум 3 символа\");\n      setFieldBorderColor({ name: \"red\" });\n    } else {\n      setErrorNameMessage(\"\");\n      setFieldBorderColor({ name: \"green\" });\n    }\n  };\n\n  const usernameHandler = (event) => {\n    var regex = new RegExp(validShema[event.target.name]);\n    setUsername(event.target.value);\n    if (username.length > 0 && username[0] !== \"@\") {\n      setUsername(`@${username}`);\n    }\n    if (!regex.test(event.target.value)) {\n      setErrorUsernameMessage(\"Минимум 5 символа\");\n      setFieldBorderColor({ username: \"red\" });\n    } else {\n      setErrorUsernameMessage(\"\");\n      setFieldBorderColor({ username: \"green\" });\n    }\n  };\n\n  const avatarHandler = (event) => {\n    var regex = new RegExp(validShema[event.target.name]);\n    setAvatar(event.target.value);\n    if (!regex.test(event.target.value)) {\n      setErrorAvatarMessage(\"Не корректный URL\");\n      setFieldBorderColor({ avatar: \"red\" });\n    } else {\n      setErrorAvatarMessage(\"\");\n      setFieldBorderColor({ avatar: \"green\" });\n    }\n  };\n\n  const handleBlur = (event) => {\n    // eslint-disable-next-line default-case\n    switch (event.target.name) {\n      case \"name\": {\n        setNameDirty(true);\n        break;\n      }\n      case \"username\": {\n        setUsernameDirty(true);\n        break;\n      }\n      case \"avatar\": {\n        setAvatarDirty(true);\n        break;\n      }\n    }\n  };\n\n  return (\n    <div className={style.page}>\n      <form className={style.pageForm} onSubmit={handleSubmit}>\n        <h3 className={style.pageFormTitle}>Add user</h3>\n        {nameDirty && errorNameMessage && (\n          <p className={style.error}>{errorNameMessage}</p>\n        )}\n        <input\n          className={style.pageFormField}\n          style={{ borderColor: fieldBorderColor && fieldBorderColor.name }}\n          type=\"text\"\n          placeholder=\"Name...\"\n          name=\"name\"\n          onChange={(e) => nameHandler(e)}\n          onBlur={(e) => handleBlur(e)}\n          value={name}\n        />\n        {usernameDirty && errorUsernameMessage && (\n          <p className={style.error}>{errorUsernameMessage}</p>\n        )}\n        <input\n          className={style.pageFormField}\n          style={{ borderColor: fieldBorderColor && fieldBorderColor.username }}\n          type=\"text\"\n          placeholder=\"Username...\"\n          name=\"username\"\n          onChange={(e) => usernameHandler(e)}\n          onBlur={(e) => handleBlur(e)}\n          value={username}\n        />\n        {avatarDirty && errorAvatarMessage && (\n          <p className={style.error}>{errorAvatarMessage}</p>\n        )}\n        <input\n          className={style.pageFormField}\n          style={{ borderColor: fieldBorderColor && fieldBorderColor.avatar }}\n          type=\"text\"\n          placeholder=\"Avatar...\"\n          name=\"avatar\"\n          onChange={(e) => avatarHandler(e)}\n          onBlur={(e) => handleBlur(e)}\n          value={avatar}\n        />\n        <input\n          className={style.pageFormField}\n          type=\"submit\"\n          value=\"Добавить\"\n          disabled={!formValid}\n        />\n      </form>\n    </div>\n  );\n}\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { requestTweets, requestUsers } from \"../../redux/actions\";\nimport * as style from \"./style.module.css\";\n\nexport default function Tweets() {\n  const dispatch = useDispatch();\n  const tweets = useSelector((state) => state.tweets);\n  const users = useSelector((state) => state.users);\n\n  const getUser = (userID) => {\n    const user = users.find((user) => user.id === userID);\n    return user;\n  };\n\n  useEffect(() => {\n    dispatch(requestTweets());\n    dispatch(requestUsers());\n  }, [dispatch]);\n\n  return (\n    <div className={style.page}>\n      {tweets.length &&\n        users.length &&\n        tweets\n          .map((tweet) => {\n            return (\n              <div className={style.card} key={tweet.id}>\n                <div className={style.head}>\n                  <div className={style.avatar}>\n                    <img\n                      src={getUser(tweet.userId).avatar}\n                      alt={getUser(tweet.userId).name}\n                    />\n                  </div>\n                  <div className={style.headInfo}>\n                    <div className={style.headInfoNames}>\n                      <div className={style.headInfoNamesItem}>\n                        {getUser(tweet.userId).name}\n                      </div>\n                      <div className={style.headInfoNamesItem}>\n                        {getUser(tweet.userId).username}\n                      </div>\n                    </div>\n                    <div>{tweet.content}</div>\n                  </div>\n                </div>\n                <div\n                  className={style.mainImg}\n                  style={{ backgroundImage: `url(${tweet.image})` }}\n                ></div>\n              </div>\n            );\n          })\n          .reverse()}\n    </div>\n  );\n}\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { requestUsers } from \"../../redux/actions\";\nimport * as style from \"./style.module.css\";\n\nexport default function Users() {\n  const dispatch = useDispatch();\n  const users = useSelector((state) => state.users);\n\n  useEffect(() => {\n    dispatch(requestUsers());\n  }, [dispatch]);\n\n  return (\n    <div className={style.page}>\n      {users.length &&\n        users\n          .map((user) => {\n            return (\n              <div className={style.card} key={user.id}>\n                <div className={style.avatar}>\n                  <img src={user.avatar} alt={user.name} />\n                </div>\n                <div>{user.name}</div>\n                <div>{user.username}</div>\n              </div>\n            );\n          })\n          .reverse()}\n    </div>\n  );\n}\n","import { useEffect } from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport AddTweet from \"../addTweet\";\nimport AddUser from \"../addUser\";\nimport Tweets from \"../tweets\";\nimport Users from \"../users\";\n\nexport default function Router() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    if (location.pathname === \"/\") navigate(\"/users\");\n  }, [location, navigate]);\n\n  return (\n    <Routes>\n      <Route path=\"/users\" element={<Users />} />\n      <Route path=\"/addUser\" element={<AddUser />} />\n      <Route path=\"/tweets\" element={<Tweets />} />\n      <Route path=\"/addTweet\" element={<AddTweet />} />\n    </Routes>\n  );\n}\n","import store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport NavBar from \"./components/navbar/NavBar\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Router from \"./components/router\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <div className=\"App\">\n          <NavBar />\n          <Router />\n        </div>\n      </Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"style_page__2WF2g\",\"pageForm\":\"style_pageForm__hVSFQ\",\"pageFormTitle\":\"style_pageFormTitle__3bNnc\",\"pageFormField\":\"style_pageFormField__3_9Mq\",\"error\":\"style_error__3Lguy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"style_page__1NRpB\",\"pageForm\":\"style_pageForm__2us1A\",\"pageFormTitle\":\"style_pageFormTitle__1vrc8\",\"pageFormField\":\"style_pageFormField__21hia\",\"error\":\"style_error__3_5La\"};"],"sourceRoot":""}